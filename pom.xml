<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.9</version>
        <relativePath/>
    </parent>
    <groupId>com.imjcker</groupId>
    <artifactId>jrebel-license-server</artifactId>
    <version>2.0.0</version>
    <name>jrebel-license-server</name>
    <description>jrebel</description>

    <properties>
        <java.version>1.8</java.version>
        <spring-boot.version>2.7.9</spring-boot.version>
        <spring-cloud.version>2021.0.6</spring-cloud.version>
        <docker.image.registryUrl>192.168.0.115:5000</docker.image.registryUrl>
        <docker.remote.host>${env.DOCKER_REMOTE_HOST}</docker.remote.host>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.67</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>4.5.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.2</version>

                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--配置docker和仓库-->
                    <dockerHost>${docker.remote.host}</dockerHost>
                    <registryUrl>${docker.image.registryUrl}</registryUrl>

                    <!--配置镜像-->
                    <imageName>${docker.image.registryUrl}/${project.groupId}/${project.artifactId}:latest</imageName>
                    <!--配置附加标签，上面的imageName必须自带一个标签，下面配置的是附加标签，附加标签可以不配置-->
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>

                    <!--配置Dockerfile-->
                    <!--FROM openjdk:11-->
                    <baseImage>openjdk:8-jdk-alpine</baseImage>
                    <workdir>/root/</workdir>
                    <entryPoint>["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "-Duser.timezone=GMT+8", "${project.build.finalName}.jar"]</entryPoint>
                    <!-- 添加资源文件 -->
                    <resources>
                        <resource>
                            <!--jar地址目录-->
                            <directory>${project.build.directory}</directory>
                            <!--jar文件-->
                            <include>${project.build.finalName}.jar</include>
                            <!--容器内目标目录-->
                            <targetPath>/root/</targetPath>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
